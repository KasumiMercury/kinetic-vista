/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/object.glb --types --shadows --transform 
*/

import * as THREE from "three";
import type {JSX} from "react";
import {useGLTF} from "@react-three/drei";
import type {GLTF} from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    "bldg_000a1708-99b6-414f-8287-ee03e51cfa97002": THREE.Mesh;
  };
  materials: Record<string, never>;
  // animations: GLTFAction[]
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const {nodes} = useGLTF("/object-transformed.glb") as unknown as GLTFResult;
  return (
      <group {...props} dispose={null}>
        <mesh
            castShadow
            receiveShadow
            geometry={
              nodes["bldg_000a1708-99b6-414f-8287-ee03e51cfa97002"].geometry
            }
            material={
              nodes["bldg_000a1708-99b6-414f-8287-ee03e51cfa97002"].material
            }
            rotation={[Math.PI / 2, 0, Math.PI / 2]}
            scale={0.01}
        >
          <meshNormalMaterial args={
            [
              {
                transparent: true,
                opacity: 0.5,
                side: THREE.DoubleSide,
              },
            ]
          }/>
        </mesh>
      </group>
  );
}

useGLTF.preload("/object-transformed.glb");
